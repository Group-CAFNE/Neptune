name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  pull-requests: write
  checks: write
  contents: read

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    runs-on: ubuntu-latest
    outputs:
      build_status: ${{ job.status }} # Capture the job status
    steps:
      - uses: actions/checkout@v4

      - name: Set up OCaml
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-version: '5.0'
          opam-version: '2.1'

      - name: Install OPAM dependencies
        run: opam install . menhir --deps-only -y

      - name: Build OCaml project
        id: build_step
        run: dune build

      - name: Run tests
        run: dune runtest

  # Job to comment on the PR and set the check status based on the build outcome
  report_status:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Post status comment
        uses: actions/github-script@v6
        env:
          BUILD_STATUS: ${{ needs.build.outputs.build_status }}
        with:
          script: |
            const github = require('@actions/github');
            const context = github.context;
            const buildStatus = process.env.BUILD_STATUS;
            let commentBody = '';
            let checkConclusion = 'success';

            if (context.payload.pull_request) {
              if (buildStatus === 'success') {
                commentBody = '‚úÖ OCaml build succeeded!';
                checkConclusion = 'success';
              } else if (buildStatus === 'failure') {
                commentBody = '‚ùå OCaml build failed. See the workflow run for details.';
                checkConclusion = 'failure';
              } else {
                commentBody = `üöß OCaml build status: ${buildStatus}`;
                checkConclusion = 'neutral'; // Or 'pending' if the build didn't complete
              }

              if (commentBody) {
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.payload.pull_request.number,
                  body: commentBody
                });
              }

              // Create or update a check run status
              await github.rest.checks.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                head_sha: context.payload.pull_request.head.sha,
                name: 'OCaml Build Status',
                status: 'completed',
                conclusion: checkConclusion,
                output: {
                  title: 'OCaml Build',
                  summary: commentBody,
                },
              });
            } else {
              console.log('Not a pull request, skipping comment and check.');
            }
